///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Imports
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const express = require('express');
const cors = require('cors');
const favicon = require('express-favicon');
const mongoose = require('mongoose');
const indexRoutes = require('./routes/indexRoutes');
const authRoutes = require('./routes/authRoutes');
const calorieRoutes = require('./routes/calorieRoutes');
const cookieParser = require('cookie-parser');
const { requireAuth, checkUser } = require('./middleware/authMiddleware');
const { User } = require('./models/Users');

require('dotenv').config() // to use env file to hide db password


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Initialisation
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const app = express();


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Middleware
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use(cors("*"));
app.use(express.json());
app.use(express.urlencoded({ extended: true }))
app.use(express.static('public'));
app.use(favicon(__dirname + '/public/images/favicon.ico'));
app.use(cookieParser());


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// View engine
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.set('view engine', 'ejs');


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Database connection
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const mongodbURI = `mongodb+srv://dan:${process.env.DATABASE_PASSWORD}@cluster0.e3gubow.mongodb.net/node-auth?retryWrites=true&w=majority`;
mongoose.connect(mongodbURI, { useNewUrlParser: true, useUnifiedTopology: true})
  .then((result) => app.listen(3002))
  .catch((err) => console.log(err));


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Server instance
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const port = process.env.PORT || 3000;

const server = app.listen(port, () => console.log(`http://localhost:${port}`))


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Routes
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.get('*', checkUser);

app.use(indexRoutes);
app.use(authRoutes);
app.use(calorieRoutes);

// 404 page if user naviagtes to an endpoint that does not exist
app.use((req, res) => {
    res.status(404).render('404', {pageTitle: "404"})
})